# ============================================================================
# ENGLISH TEXTS - FOR PICOCLI ONLY
# ============================================================================

description.app=JavaDoc to Markdown documentation tool

# Conditionals
param.short.positive=y
param.long.positive=yes

# Parameter names (paramLabel)
param.label.sourcePath=SOURCE_PATH
param.label.outputPath=OUTPUT_PATH
param.label.outFileName=OUTPUT_FILE
param.label.configFile=CONFIG_FILE
param.label.combinePackagesMode=COMBINE_MODE
param.label.includePrivate=INCLUDE_PRIVATE
param.label.includeProtected=INCLUDE_PROTECTED
param.label.includePublic=INCLUDE_PUBLIC
param.label.debugMode=DEBUG_MODE
param.label.tableOfContent=TABLE_CONTENT
param.label.printEmptyNotify=NOTIFY_EMPTY
param.label.printClassIndex=PRINT_INDEX
param.label.foreSignClassIndex=PREFIX_INDEX
param.label.foreSignClassIndexOnDetails=PREFIX_DETAILS
param.label.foreSignClassIndexOnSubtitle=PREFIX_SUBTITLE

# Common messages
usage.helpTip=\ud83d\udca1 Run with --help to see all options

# Command descriptions (usage.commandName)
usage.init=Create initial configuration file (config.yml)

# Usage examples
usage.example.get=Example: javadocmd get sourcePath
usage.example.set=Example: javadocmd set --sourcePath ./src --debugMode true
usage.example.get.set=To get: get debugMode | To set: set --debugMode true

# Option descriptions (commandName.optionName)
init.sourcePath=Source code path to document
init.outputPath=Output directory for documentation
init.outFileName=Output file name
init.combinePackagesMode=Combine packages mode (true: single file, false: multiple files)
init.includePrivate=Include private members
init.includeProtected=Include protected members
init.includePublic=Include public members
init.debugMode=Enable debug mode
init.tableOfContent=Include table of content
init.printEmptyNotify=Notify about empty lists
init.printClassIndex=Print class index
init.foreSignClassIndex=Prefix for class index (e.g., #)
init.foreSignClassIndexOnDetails=Use prefix in class details
init.foreSignClassIndexOnSubtitle=Use prefix in subtitles
init.force=Overwrite configuration file if exists
init.configFile=Configuration file path (default: config.yml)
init.help=Show this help message and exit
init.interactive=Interactive mode if not all parameters are provided
init.muteMode=Silent mode creates the necessary directories and files to operate without asking questions.

init.message.configFileAlreadyExist=\u274c Configuration file already exists
init.message.configFileAlreadyExist.help=\ud83d\udca1 Use 'validate' to fix or 'set' to modify existing configuration
init.message.interactiveStart=\ud83d\udca1 Starting interactive configuration...
init.message.insufficientParameters=\u274c Insufficient parameters. --sourcePath and --outputPath are required
init.message.createError=\u274c Error creating configuration
init.message.createdWithParameters=\u2705 Configuration created with provided parameters
init.message.configSaved=\u2705 Configuration saved

# Global options (picocli looks for these automatically)
usage.help=Show this help message and exit
usage.version=Print version information and exit

# Show command
usage.show=Show current configuration
show.help=Show this help message and exit

# Show specific messages
show.header=\ud83d\udccb Current Configuration
show.sourcePath=Source code directory
show.outputPath=Output directory
show.outFileName=Output file name
show.combinePackagesMode=Combine packages mode
show.includePrivate=Include private members
show.includeProtected=Include protected members
show.includePublic=Include public members
show.debugMode=Debug mode
show.tableOfContent=Table of content
show.printEmptyNotify=Notify empty lists
show.printClassIndex=Print class index
show.foreSignClassIndex=Class index prefix
show.foreSignClassIndexOnDetails=Prefix in details
show.foreSignClassIndexOnSubtitle=Prefix in subtitles
show.configFilePath=Configuration file path
show.markdownLanguage=Idioma del Markdown

# Get command
usage.get=Get specific configuration value
get.help=Show this help message and exit

# Get options
get.quiet=Show only the value (no additional messages)
get.configFile=Configuration file path (default: config.yml)

# Parameters
get.key=Configuration key to get

# Error messages
get.error.invalidKey=Invalid configuration key: %s
get.error.availableKeys=Available keys: sourcePath, outputPath, outFileName, combinePackagesMode, includePrivate, includeProtected, includePublic, debugMode, tableOfContent, printEmptyNotify, printClassIndex, foreSignClassIndex, foreSignClassIndexOnDetails, foreSignClassIndexOnSubtitle

# Set command
usage.set=Modify configuration values
set.help=Show this help message and exit

# Set options (one for each Config field)
set.sourcePath=Source code path to document
set.outputPath=Output directory for documentation
set.outFileName=Output file name
set.combinePackagesMode=Combine packages mode (true: single file, false: multiple files)
set.includePrivate=Include private members
set.includeProtected=Include protected members
set.includePublic=Include public members
set.debugMode=Enable debug mode
set.tableOfContent=Include table of content
set.printEmptyNotify=Notify about empty lists
set.printClassIndex=Print class index
set.foreSignClassIndex=Prefix for class index (e.g., #)
set.foreSignClassIndexOnDetails=Use prefix in class details
set.foreSignClassIndexOnSubtitle=Use prefix in subtitles
set.markdownLanguage=Markdown language
set.configFile=Configuration file path (default: config.yml)
set.force=Create configuration file if it doesn't exist

# Validate command
usage.validate=Validate current configuration
validate.help=Show this help message and exit
validate.interactive=Interactive mode to apply corrections automatically
validate.configFile=Configuration file path (default: config.yml)

# Validation messages
validate.issue.sourcePath.missing=sourcePath is not configured
validate.issue.outputPath.missing=outputPath is not configured
validate.issue.sourcePath.notExists=sourcePath does not exist: %s
validate.issue.outputPath.notExists=outputPath does not exist: %s
validate.issue.outputPath.notDirectory=outputPath is not a directory: %s
validate.issue.sourcePath.notDirectory=sourcePath is not a directory: %s
validate.issue.outFileName.missing=outFileName is not defined (required when combinePackagesMode=true)
validate.issue.ask.createDir=Do you want to create this directory and add it as %s? [y/N]:

# Suggestions
validate.suggestion.sourcePath.missing=Run: javadocmd set --sourcePath "./src"
validate.suggestion.outputPath.missing=Run: javadocmd set --outputPath "./docs"
validate.suggestion.path.notExists=Create directory: %s
validate.suggestion.outFileName.missing=Run: javadocmd set --outFileName "README.md"

# Execution messages
validate.message.loading=Loading configuration for validation...
validate.message.validating=Validating configuration...
validate.message.issuesFound=Found %d issue(s):
validate.message.noIssues=\u2705 Configuration valid - everything looks good!
validate.message.validConfiguration=\u2705 Configuration valid
validate.message.applyingCorrections=Applying corrections...
validate.message.correctionsApplied=\u2705 Corrections applied successfully
validate.message.correctionsSkipped=\u2139\ufe0f  Corrections skipped
validate.message.saveError=\u274c Error saving configuration: %s
validate.message.noConfig=\u274c Configuration file not found.
validate.message.loadError=\u274c Error loading configuration: %s
validate.message.source= - Source
validate.message.output= - Output
validate.message.corruptedConfiguration=\u274c Configuration corrupted or empty
validate.message.invalidConfiguration=\u274c Invalid configuration - issues detected

# Messages for interactive creation in ConfigurationService
validate.message.creatingConfig=Required configuration
validate.message.directoryCreated=Directory created: %s
validate.message.parentCreated=Parent directory created: %s

# Interactive prompts
validate.prompt.applyCorrections=Apply corrections automatically? [y/N]

# Internationalization
validate.message.langConfig=\ud83c\udf0d Configuring internationalization...
validate.message.ask.createDir=Create languages directory (/langs)? [y/N]
validate.message.langDirCreated=\u2705 Directory created
validate.message.error.createDir=\u274c Error creating directory
validate.message.skip.createDir=\u2139\ufe0f  Skipping languages directory creation
validate.message.langDirExist=\u2705 Directory already exists
validate.message.ask.createLangEs=Create Spanish language file (es.yml)? [y/N]
validate.message.langFileCreated=\u2705 File created
validate.message.error.createFile=\u274c Error creating .yml file
validate.message.langFileExist=\u2705 File already exists
validate.message.ask.createLangEn=Create English language file (en.yml)? [y/N]
validate.message.success=\u2705 Internationalization configured successfully

# ConfigurationService
config.message.error.createDir=\u274c The directory could not be created
config.message.error.parentDir=\u274c The parent directory does not exist
config.message.ask.createDir=Do you want to create the parent directory? [y/N]
config.message.error.createParentDir=\u274c Could not create parent directory